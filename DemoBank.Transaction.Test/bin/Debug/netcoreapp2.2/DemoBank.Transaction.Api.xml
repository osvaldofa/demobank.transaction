<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DemoBank.Transaction.Api</name>
    </assembly>
    <members>
        <member name="T:DemoBank.Transaction.Presentation.Controllers.TransactionController">
            <summary>
            Controller responsible for manage Transactions API.
            </summary>
        </member>
        <member name="M:DemoBank.Transaction.Presentation.Controllers.TransactionController.#ctor(DemoBank.Transaction.Domain.Interfaces.ITransactionServices,Microsoft.Extensions.Logging.ILogger{DemoBank.Transaction.Presentation.Controllers.TransactionController})">
            <summary>
            Constructor method for Transaction Controller.
            </summary>
            <param name="transactionServices">Transaction services instantiated by dependency injection.</param>
            /// <param name="logger">Logger services instantiated by dependency injection.</param>
        </member>
        <member name="M:DemoBank.Transaction.Presentation.Controllers.TransactionController.CreateTransaction(DemoBank.Transaction.Infrastructure.Data.Models.TransactionModel)">
            <summary>
            Create a new transaction.
            </summary>
            <param name="transaction">Transaction data.</param>
            <returns>Transaction Id.</returns>
        </member>
        <member name="M:DemoBank.Transaction.Presentation.Controllers.TransactionController.GetTransactionsByAccountNumber(System.Int64)">
            <summary>
            List all transactions for an specific account.
            </summary>
            <param name="accountNumber">Account number.</param>
            <returns>List of all transactions.</returns>
        </member>
        <member name="T:DemoBank.Transaction.Presentation.InjectorBase">
            <summary>
            Startup extension methods.
            </summary>
        </member>
        <member name="M:DemoBank.Transaction.Presentation.InjectorBase.ConfigureInjections(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configure dependency injections.
            </summary>
            <param name="service">Service collection instantiated on StartUp class.</param>
        </member>
        <member name="T:DemoBank.Transaction.Presentation.Startup">
            <summary>
            Startup object.
            </summary>
        </member>
        <member name="M:DemoBank.Transaction.Presentation.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Startup configuration constructor.
            </summary>
            <param name="configuration">Configuration aggregator instantiated by dependency injection.</param>
        </member>
        <member name="M:DemoBank.Transaction.Presentation.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">Services collection.</param>
        </member>
        <member name="M:DemoBank.Transaction.Presentation.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">Application builder</param>
            <param name="env">Hosting environment</param>
        </member>
    </members>
</doc>
